name: CI

on:
  push:
    branches: [main, master, fix_builds]
  pull_request:
    branches: [main, master, fix_builds]
  workflow_dispatch:

jobs:
  test:
    name: Test ${{ matrix.os }} - ${{ matrix.compiler }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux - GCC
          - os: ubuntu-22.04
            compiler: gcc-10
            python-version: "3.8"
          - os: ubuntu-22.04
            compiler: gcc-11
            python-version: "3.11"
          - os: ubuntu-24.04
            compiler: gcc-13
            python-version: "3.13"

          # Linux - Clang
          - os: ubuntu-22.04
            compiler: clang-14
            python-version: "3.10"
          - os: ubuntu-24.04
            compiler: clang-19
            python-version: "3.13"

          # macOS
          - os: macos-14
            compiler: clang
            python-version: "3.9"
          - os: macos-14
            compiler: clang
            python-version: "3.12"

          # Windows
          - os: windows-2022
            compiler: msvc
            python-version: "3.10"
          - os: windows-2022
            compiler: msvc
            python-version: "3.13"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup GCC (Linux)
        if: runner.os == 'Linux' && startsWith(matrix.compiler, 'gcc')
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.compiler }} g++-$(echo ${{ matrix.compiler }} | cut -d'-' -f2)
          echo "CC=${{ matrix.compiler }}" >> $GITHUB_ENV
          echo "CXX=g++-$(echo ${{ matrix.compiler }} | cut -d'-' -f2)" >> $GITHUB_ENV

      - name: Setup Clang (Linux)
        if: runner.os == 'Linux' && startsWith(matrix.compiler, 'clang')
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.compiler }}
          echo "CC=${{ matrix.compiler }}" >> $GITHUB_ENV
          echo "CXX=clang++-$(echo ${{ matrix.compiler }} | cut -d'-' -f2)" >> $GITHUB_ENV

      - name: Setup MSVC (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[test]"

      - name: Build and run C++ tests (Unix)
        if: runner.os != 'Windows'
        run: |
          cmake -Bbuild -DCMAKE_BUILD_TYPE=Release
          cmake --build build -j
          cd build && ctest --output-on-failure

      - name: Build and run C++ tests (Windows)
        if: runner.os == 'Windows'
        run: |
          cmake -Bbuild -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release -j
          cd build && ctest -C Release --output-on-failure

      - name: Run Python tests
        run: |
          python -m pytest tests/ -v --tb=short

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install ruff mypy

      - name: Run ruff
        run: ruff check .

      - name: Run mypy (if configured)
        run: mypy status_rollup/ --ignore-missing-imports || true
        continue-on-error: true

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build sdist
        run: |
          python -m pip install --upgrade pip build
          python -m build --sdist

      - name: Check sdist
        run: |
          python -m pip install twine
          twine check dist/*

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
